
                                                          August 3, 2019


                    Trabajo PrÃ¡ctico Especial 2019/2
                               RevisiÃ³n 0

Resumen

   Este documento describe el Trabajo Especial de la materia Protocolos
   de ComunicaciÃ³n para la cursada del segundo cuatrimestre del aÃ±o
   2019.

TerminologÃ­a

   Las palabras clave "DEBE", "NO DEBE", "OBLIGATORIO", "DEBERÃ", "NO
   DEBERÃ", "DEBERÃA", "NO DEBERÃA", "RECOMENDADO", "PUEDE" y "OPCIONAL"
   en este documento serÃ¡n interpretadas como se describe en el RFC 2119
   [RFC2119].

Tabla de Contenidos

   1.  Requerimientos Funcionales  . . . . . . . . . . . . . . . . .   2
     1.1.  Objetivo  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.2.  Formas de uso . . . . . . . . . . . . . . . . . . . . . .   2
     1.3.  Concurrencia y Disponibilidad . . . . . . . . . . . . . .   2
     1.4.  Fallos  . . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.5.  Registros de acceso . . . . . . . . . . . . . . . . . . .   2
     1.6.  Pipelining  . . . . . . . . . . . . . . . . . . . . . . .   3
     1.7.  Transformaciones de mensajes utilizando aplicaciones
           externas  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.8.  MÃ©tricas  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.9.  ConfiguraciÃ³n dinÃ¡mica y monitoreo  . . . . . . . . . . .   4
   2.  Requerimientos No Funcionales . . . . . . . . . . . . . . . .   4
     2.1.  API de Sockets a utilizar . . . . . . . . . . . . . . . .   4
     2.2.  Performance . . . . . . . . . . . . . . . . . . . . . . .   4
     2.3.  Argumentos de las aplicaciones  . . . . . . . . . . . . .   5
   3.  Trabajo en Grupo  . . . . . . . . . . . . . . . . . . . . . .   5
     3.1.  Alumnos Recursantes . . . . . . . . . . . . . . . . . . .   5
     3.2.  Herramientas de colaboraciÃ³n  . . . . . . . . . . . . . .   5
   4.  PresentaciÃ³n Oral . . . . . . . . . . . . . . . . . . . . . .   6
   5.  Entrega . . . . . . . . . . . . . . . . . . . . . . . . . . .   6
     5.1.  Material a entregar . . . . . . . . . . . . . . . . . . .   6
     5.2.  Forma de Entrega  . . . . . . . . . . . . . . . . . . . .   7
     5.3.  Pre-entrega . . . . . . . . . . . . . . . . . . . . . . .   7
     5.4.  Fecha de Entrega  . . . . . . . . . . . . . . . . . . . .   7
     5.5.  CalificaciÃ³n  . . . . . . . . . . . . . . . . . . . . . .   7
     5.6.  Entrega tardÃ­a  . . . . . . . . . . . . . . . . . . . . .   8
     5.7.  CÃ³digo de Honor . . . . . . . . . . . . . . . . . . . . .   9



                                Enunciado                       [Pag. 1]

                         Trabajo Especial 2019/2             August 2019


   6.  Referencias . . . . . . . . . . . . . . . . . . . . . . . . .   9
     6.1.  Normative References  . . . . . . . . . . . . . . . . . .   9
     6.2.  URIs  . . . . . . . . . . . . . . . . . . . . . . . . . .   9

1.  Requerimientos Funcionales

1.1.  Objetivo

   El objetivo del trabajo es implementar un servidor proxy para el
   protocolo POP3 (Post Office Protocol versiÃ³n 3) [RFC1957] que pueda
   ser usado por Mail User Agents tales como Mozilla Thunderbird,
   Microsoft Outlook y Evolution para la recepciÃ³n de correos
   electrÃ³nicos.  El proxy proveerÃ¡ al usuario algunos servicios extras
   que el servidor de origen POP3 no provee.

   Los alumnos DEBEN demostrar habilidad para la programaciÃ³n de
   aplicaciones cliente/servidor con sockets, la comprensiÃ³n de
   estÃ¡ndares de la industria, y la capacidad de diseÃ±ar protocolos de
   aplicaciÃ³n.

1.2.  Formas de uso

   El usuario DEBERÃ configurar su MUA para que se utilice el proxy.  No
   serÃ¡ necesario soportar STARTTLS, TLS, SSL.

1.3.  Concurrencia y Disponibilidad

   El servidor proxy DEBE soportar mÃºltiples clientes de forma
   concurrente y simultÃ¡nea (al menos 1024).  Se DEBE tener en cuenta en
   la implementaciÃ³n aquellos factores que afecten la disponibilidad del
   servicio.

1.4.  Fallos

   El servidor proxy DEBE reportar los fallos a los User-Agents usando
   toda la potencia del protocolo POP3.

1.5.  Registros de acceso

   El servidor proxy DEBE dejar registros de los accesos en la consola
   y/o en un archivo que permitan entender que peticiones estÃ¡n pasando
   por el proxy y su resultado.

   Consejo: es conveniente observar como registran los accesos los
   servidores POP3 tradicionales.  Imprimir todos los bytes que pasa por
   el proxy no es algo que se desea.





                                Enunciado                       [Pag. 2]

                         Trabajo Especial 2019/2             August 2019


1.6.  Pipelining

   El servidor proxy DEBE proveer a sus clientes la capacidad de
   PIPELINING ([RFC2449] secciÃ³n 6.6) independientemente de la
   disponibilidad en el servidor origen.  En caso de que Ã©ste lo
   soporte, el envio de comandos usarÃ¡ PIPELINING; mientras que si Ã©ste
   no lo soporta tendrÃ¡ que enviar los comandos de a uno por vez
   esperando cada una de las respuestas.

1.7.  Transformaciones de mensajes utilizando aplicaciones externas

   El servidor proxy DEBE implementar mecanismos que permita transformar
   los correos electrÃ³nicos utilizando aplicaciones externas.  Estas
   aplicaciones externas recibirÃ¡n por entrada estÃ¡ndar el mensaje de
   correo y dejarÃ¡ en su salida estÃ¡ndar el mensaje procesado.

   La utilizaciÃ³n de aplicaciones externas permite externalizar el
   procesamiento de los mensajes en aplicaciones que nada saben del
   protocolo que transporta los mensajes (en este caso POP3).  El
   programa externo por excelencia a correr es cat(1).  Existen
   herramientas anti-spam (basado en el contenido del mensaje) que
   utilizan esta interfaz como ser Spamassasin [1].  TambiÃ©n existen
   herramientas en la lucha del malware como RenAttach [2].

   Se DEBE implementar al menos una de las siguientes transformaciones:

   o  reemplazo de archivos adjuntos: las partes MIME de cierto media-
      type configurable (por ejemplo application/*) serÃ¡n reemplazadas
      por una parte de tipo text/plain con un texto configurable.  Esta
      funcionalidad permitirÃ­a por ejemplo reemplazar en el servidor
      archivos adjuntos "peligrosos" (.exe) por una nota que indique por
      quÃ© se removiÃ³.

1.8.  MÃ©tricas

   El sistema DEBE implementar mecanismos que permitan recolectar
   mÃ©tricas que ayuden a la operaciÃ³n del sistema.

   o  conexiones concurrentes

   o  cantidad de accesos histÃ³ricos

   o  bytes transferidos

   o  cualquier otra mÃ©trica que considere oportuno para el
      entendimiento del funcionamiento dinÃ¡mico del sistema





                                Enunciado                       [Pag. 3]

                         Trabajo Especial 2019/2             August 2019


   Las mÃ©tricas PUEDEN ser volÃ¡tiles (si se reinicia el servidor las
   estadÃ­sticas pueden perderse).

1.9.  ConfiguraciÃ³n dinÃ¡mica y monitoreo

   Las transformaciones DEBEN poder modificarse en tiempo de ejecuciÃ³n
   (sin reiniciar el servidor).  Las diferentes implementaciones PUEDEN
   decidir disponibilizar otros cambios de ejecuciÃ³n en tiempo de
   ejecuciÃ³n de otras configuraciones (memoria utilizada en I/O,
   timeouts, etc).

   Las mÃ©tricas (Seccion 1.8) recolectadas tambiÃ©n deben poder obtenerse
   en tiempo de ejecuciÃ³n.

   Para cumplir con esto deberÃ¡ diseÃ±ar e implementar uno o varios
   protocolos.  Estos protocolos deberÃ¡n funcionar sobre SCTP.  Los
   protocolos DEBERÃN estar debidamente documentados.

   DEBERÃ implementar una aplicaciÃ³n cliente que use dicho protocolo.

2.  Requerimientos No Funcionales

   AdemÃ¡s de los requerimientos listados en el documento Lineamiento de
   ProgramaciÃ³n (Material DidÃ¡ctico > Trabajo PrÃ¡ctico Especial), se
   suman los siguientes requerimientos no funcionales:

2.1.  API de Sockets a utilizar

   La implementaciÃ³n del proxy DEBE utilizar sockets en modo no
   bloqueante multiplexada.

2.2.  Performance

   Se DEBE tener en cuenta todos los aspectos que hagan a la buena
   performance, escalabilidad y disponibilidad del servidor.  Se espera
   que se maneje de forma eficiente los flujos de informaciÃ³n (por
   ejemplo no cargar en memoria mensajes muy grandes, ser eficaz y
   eficiente en el intÃ©rprete de mensajes).  El informe DEBE contener
   informaciÃ³n sobre las pruebas de stress.  Algunas preguntas
   interesantes a responder son:

   o  Â¿Cual es la mÃ¡xima cantidad de conexiones simultÃ¡neas que soporta?

   o  Â¿CÃ³mo se degrada el throughput?







                                Enunciado                       [Pag. 4]

                         Trabajo Especial 2019/2             August 2019


2.3.  Argumentos de las aplicaciones

   Tanto la aplicaciÃ³n servidor, como la aplicaciÃ³n cliente de
   configuraciÃ³n/monitoreo DEBERÃN manejar los argumentos de lÃ­nea de
   comandos de cierta forma uniforme (por ejemplo -c <puerto> podrÃ­a
   especificar el puerto utilizado para el protocolo de configuraciÃ³n/
   monitoreo).  Los detalles de quÃ© parÃ¡metros se deben manejar serÃ¡
   publicado en otro documento.

3.  Trabajo en Grupo

   Para la realizaciÃ³n del Trabajo PrÃ¡ctico los alumnos DEBERÃN
   conformar grupos y trabajar en equipo.  Se espera la participaciÃ³n
   equitativa de todos los integrantes de un grupo durante la
   realizaciÃ³n y exposiciÃ³n del trabajo.  Todos los alumnos DEBEN
   demostrar que han participado de la realizaciÃ³n del trabajo y que han
   desarrollaron las competencias alineadas a los objetivos del trabajo
   (Seccion 1.1).

3.1.  Alumnos Recursantes

   Los alumnos que se encuentren recursando la materia y que hayan
   aprobado en su Ãºltima cursada un Trabajo PrÃ¡ctico Especial de
   similares caracterÃ­sticas al que se describe en este documento pueden
   optar entre las siguientes alternativas:

   1.  Realizar el Trabajo PrÃ¡ctico Especial descripto en este
       documento.

       El mismo deberÃ¡ ser aprobado.  Se tomarÃ¡ la calificaciÃ³n que
       surja de la misma.  En caso de desaprobar no se tendrÃ¡ en cuenta
       ejecuciones pasadas.

   2.  No realizar el Trabajo PrÃ¡ctico Especial de este cuatrimestre.

       El alumno mantendrÃ¡ la nota del Ãºltimo Trabajo PrÃ¡ctico Especial
       de similar caracterÃ­sticas aprobado.  El alumno DEBE exteriorizar
       dicha decisiÃ³n mediante el canal adecuado (tablero de discusiÃ³n)
       antes de la fecha lÃ­mite de inscripciÃ³n de grupos.

3.2.  Herramientas de colaboraciÃ³n

   Los grupos tendrÃ¡n a su disposiciÃ³n las herramientas provistas por el
   mÃ³dulo Grupos de Campus ITBA y un repositorio GIT Bitbucket para el
   cÃ³digo (y otros archivos).  Se espera transparencia en el desarrollo
   del trabajo.  Como ejemplo a un comportamiento poco transparente se
   puede describir la utilizaciÃ³n de otro repositorio de cÃ³digo.




                                Enunciado                       [Pag. 5]

                         Trabajo Especial 2019/2             August 2019


4.  PresentaciÃ³n Oral

   El Jueves 17 de Octubre durante la clase teÃ³rica cada grupo dispondrÃ¡
   de no mÃ¡s de 15 minutos donde DEBERÃ exponer un resumen del trabajo,
   detallando como han organizado tÃ©cnicamente el trabajo, describiendo
   los problemas encontrados y las tÃ©cnicas utilizadas para
   solucionarlos.

5.  Entrega

5.1.  Material a entregar

   Cada grupo DEBE entregar todo el material necesario para reproducir
   el Trabajo PrÃ¡ctico.  Como mÃ­nimo DEBE contener:

   a.  Un informe en formato PDF [RFC3778] o text/plain (con
       codificaciÃ³n UTF-8) que contenga las siguientes secciones
       (respetando el orden):

       1.   Ãndice (por lo tanto las hojas deberÃ¡n estar numeradas).

       2.   DescripciÃ³n detallada de los protocolos y aplicaciones
            desarrolladas.

       3.   Problemas encontrados durante el diseÃ±o y la implementaciÃ³n.

       4.   Limitaciones de la aplicaciÃ³n.

       5.   Posibles extensiones.

       6.   Conclusiones.

       7.   Ejemplos de prueba.

       8.   GuÃ­a de instalaciÃ³n detallada y precisa.  No es necesario
            desarrollar un programa instalador.

       9.   Instrucciones para la configuraciÃ³n.

       10.  Ejemplos de configuraciÃ³n y monitoreo.

       11.  Documento de diseÃ±o del proyecto (que ayuden a entender la
            arquitectura de la aplicaciÃ³n).

   b.  Documento utilizados como soporte durante la presentaciÃ³n.  Deben
       estar en formato PDF [RFC3778].

   c.  CÃ³digos fuente y archivos de construcciÃ³n



                                Enunciado                       [Pag. 6]

                         Trabajo Especial 2019/2             August 2019


   d.  Un archivo README en la raÃ­z que describa al menos:

       *  la ubicaciÃ³n de todos los materiales previamente enumerados

       *  el procedimiento necesario para generar una versiÃ³n ejecutable
          de las aplicaciones

       *  la ubicaciÃ³n de los diferentes artefactos generados

       *  cÃ³mo se debe ejecutar las diferentes artefactos generados (y
          sus opciones)

5.2.  Forma de Entrega

   La entrega se realizarÃ¡ por Campus ITBA en la asignaciÃ³n creada para
   ello.

   Se DEBE entregar un tarball que sea el producto de clonar el
   repositorio GIT (por lo tanto el repositorio GIT DEBE contener todos
   los materiales de entrega (Seccion 5.1)), y su historia.

5.3.  Pre-entrega

   El Martes 17 de septiembre a las 16.05 los grupos deberÃ¡n entregar
   una implementaciÃ³n del proxy que podrÃ¡ utilizar sockets blockeantes.

   TendrÃ¡ que soportar transformaciones externas, pero no serÃ¡ necesario
   implementar ninguna transformaciÃ³n especÃ­fica.  No serÃ¡ necesario que
   estÃ© implementado el PIPELINING.  Tampoco serÃ¡ necesaria que esta
   implementaciÃ³n sea configurable/monitoreable remotamente.

   La pre-entrega se realizarÃ¡ por Campus ITBA.  Se deberÃ¡n seguir los
   mismos lineamientos que para la entrega final.

5.4.  Fecha de Entrega

   Las entregas se podrÃ¡n realizar hasta el Martes 12 de Noviembre a las
   16.05hs (horario Buenos Aires).  Una vez realizada la entrega los
   grupos DEBERÃN mostrar el correcto funcionamiento del sistema con
   casos de prueba provisto por los equipos y provistos ese dÃ­a por la
   CÃ¡tedra.

5.5.  CalificaciÃ³n

   Para aprobar el Trabajo PrÃ¡ctico se DEBE cumplir TODAS las siguientes
   condiciones:





                                Enunciado                       [Pag. 7]

                         Trabajo Especial 2019/2             August 2019


   o  El material entregado DEBE estar completo (por ejemplo no se puede
      corregir si falta el informe o alguna clase)

   o  Se utilizan Ãºnicamente las librerÃ­a permitidas para los usos
      definidos.

   o  DEBE ser correcta las cuestiones de entradas/salida no bloqueante.
      Por ejemplo las lecturas, escrituras y el establecimiento de
      nuevas conexiones DEBEN ser mediante suscripciones y no
      bloquearse.

   o  DEBE ser correcta las cuestiones relacionadas a la lectura/
      escrituras parciales.

   o  Sumar CUATRO puntos de calificaciÃ³n.

   La calificaciÃ³n ocurre dentro de una escala de DIEZ puntos
   destinando...

   o  CUATRO puntos a la evaluaciÃ³n de la funcionalidad bÃ¡sica.  El
      guiÃ³n de prueba serÃ¡ publicado unos dÃ­as antes de la entrega.
      Cada prueba tendrÃ¡ un puntaje asignado.

   o  TRES puntos a la correctitud de implementaciÃ³n, el diseÃ±o del
      cÃ³digo (selecciÃ³n adecuada de algoritmos, estructura de programa
      limpia, etc;) y al estilo (Â¿estÃ¡ debidamente comentado?, Â¿es
      legible? ...)

   o  UN punto con CINCUENTA centÃ©simos a la evaluaciÃ³n de la pre-
      entrega.  Solo se evaluaran pre-entregas entregadas en tiempo y
      forma.

   o  UN punto con CINCUENTA centÃ©simos a la descripciÃ³n del protocolo
      diseÃ±ado, la presentaciÃ³n oral, y el informe.

   La calificaciÃ³n es de carÃ¡cter grupal; pero si hay evidencias de que
   un alumno de un grupo no participÃ³ en la elaboraciÃ³n, o Ã©ste no puede
   defender o demostrar su participaciÃ³n, entonces el alumno no podrÃ¡
   aprobar el Trabajo PrÃ¡ctico.

5.6.  Entrega tardÃ­a

   Las entregas que ocurran entre 0 horas (inclusive) y 24 horas
   (exclusivo) luego de la fecha de entrega especificada perderÃ¡n 25% de
   la calificaciÃ³n.






                                Enunciado                       [Pag. 8]

                         Trabajo Especial 2019/2             August 2019


   Las entregas que ocurran entre 24 horas (inclusive) y 48 horas
   (exclusivo) luego de la fecha de entrega especificada perderÃ¡n 50% de
   la calificaciÃ³n.

   Luego de 48 horas el trabajo serÃ¡ considerado NO APROBADO, con una
   calificaciÃ³n de CERO puntos.

5.7.  CÃ³digo de Honor

   Las entregas deben ser creaciones originales de los alumnos de cada
   grupo.  Estas creaciones pueden ser resultado de discusiones en
   general o en particular en las clase (clase teÃ³rica, discusiones
   prÃ¡cticas, exposiciÃ³n de grupos), pero las implementaciones DEBEN ser
   originales.  EstÃ¡ permitido utilizar parcialmente o totalmente el
   cÃ³digo fuente presentando por la cÃ¡tedra en clase.

6.  Referencias

6.1.  Normative References

   [RFC1957]  Nelson, R., "Some Observations on Implementations of the
              Post Office Protocol (POP3)", RFC 1957,
              DOI 10.17487/RFC1957, June 1996, <https://www.rfc-
              editor.org/info/rfc1957>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2449]  Gellens, R., Newman, C., and L. Lundblade, "POP3 Extension
              Mechanism", RFC 2449, November 1998.

   [RFC3778]  Taft, E., Pravetz, J., Zilles, S., and L. Masinter, "The
              application/pdf Media Type", RFC 3778,
              DOI 10.17487/RFC3778, May 2004,
              <http://www.rfc-editor.org/info/rfc3778>.

6.2.  URIs

   [1] https://spamassassin.apache.org/

   [2] http://www.pc-tools.net/unix/renattach/










                                Enunciado                       [Pag. 9]
